"""add cascade on query_id deletion query_live_search_yandex/google

Revision ID: de2f5c7bbddf
Revises: ffa900c37242
Create Date: 2025-01-05 02:31:00.665277

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'de2f5c7bbddf'
down_revision: Union[str, None] = 'ffa900c37242'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('query_live_search_google_query_id_fkey', 'query_live_search_google', type_='foreignkey')
    op.create_foreign_key(None, 'query_live_search_google', 'live_search_list_query', ['query_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('query_live_search_yandex_query_id_fkey', 'query_live_search_yandex', type_='foreignkey')
    op.create_foreign_key(None, 'query_live_search_yandex', 'live_search_list_query', ['query_id'], ['id'], ondelete='CASCADE')
    op.alter_column('user', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'query_live_search_yandex', type_='foreignkey')
    op.create_foreign_key('query_live_search_yandex_query_id_fkey', 'query_live_search_yandex', 'live_search_list_query', ['query_id'], ['id'])
    op.drop_constraint(None, 'query_live_search_google', type_='foreignkey')
    op.create_foreign_key('query_live_search_google_query_id_fkey', 'query_live_search_google', 'live_search_list_query', ['query_id'], ['id'])
    op.create_table('apscheduler_jobs',
    sa.Column('id', sa.VARCHAR(length=191), autoincrement=False, nullable=False),
    sa.Column('next_run_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('job_state', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='apscheduler_jobs_pkey')
    )
    op.create_index('ix_apscheduler_jobs_next_run_time', 'apscheduler_jobs', ['next_run_time'], unique=False)
    # ### end Alembic commands ###
